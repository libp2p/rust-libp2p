
pull_request_rules:
  - name: Ask to resolve conflict
    conditions:
      - conflict
      - -author=dependabot[bot]
      - or:
          - -draft # Don't report conflicts on regular draft.
          - and: # Do report conflicts on draft that are scheduled for the next major release.
              - draft
              - milestone~=v[0-9]\.[0-9]{2}
    actions:
      comment:
        message: This pull request has merge conflicts. Could you please resolve them
          @{{author}}? 🙏

  - name: Remove reviews on updates after PR is queued for merging
    conditions:
      - base=master
      - label=send-it
      - author!=@libp2p/rust-libp2p-maintainers
      - author!=dependabot[bot]
    actions:
      dismiss_reviews:
        message: Approvals have been dismissed because the PR was updated after the
          `send-it` label was applied.
        changes_requested: false

  - name: Approve trivial maintainer PRs
    conditions:
      - base=master
      - label=trivial
      - author=@libp2p/rust-libp2p-maintainers
    actions:
      review:
        type: APPROVE

  - name: Approve dependabot PRs of semver-compatible updates
    conditions:
      - author=dependabot[bot]
      - or:
          - title~=bump [^\s]+ from ([1-9]+)\..+ to \1\.      # For major >= 1 versions, only approve updates with the same major version.
          - title~=bump [^\s]+ from 0\.([\d]+)\..+ to 0\.\1\. # For major == 0 versions, only approve updates with the same minor version.
    actions:
      review:
        type: APPROVE

  - name: refactored queue action rule
    conditions: []
    actions:
      queue:
queue_rules:
  - name: duplicated default from Add approved dependabot PRs to merge queue
    queue_conditions:
      - label=send-it
      - base=master
      - author=dependabot[bot]
      - base=master
    merge_conditions: []
    merge_method: squash
    commit_message_template: |
      {{ title }}

      {{ body | get_section("## Description", "") }}

      Pull-Request: #{{ number }}.

      {{ body | get_section("## Attributions", "") }}
  - name: default
    queue_conditions:
      - label=send-it
      - base=master
    merge_conditions: []
    merge_method: squash
    commit_message_template: |
      {{ title }}

      {{ body | get_section("## Description", "") }}

      Pull-Request: #{{ number }}.

      {{ body | get_section("## Attributions", "") }}
  # External PR's don't have access to secrets and variables, therefore they don't run the interop tests.
  # using a batch queue allows to circumvent that as mergify creates it from an internal branch.
  - name: external_prs
    queue_conditions:
      - label=send-it-batch
      - base=master
    merge_conditions: []
    batch_size: 1
    merge_method: squash
    commit_message_template: |
      {{ title }}

      {{ body | get_section("## Description", "") }}

      Pull-Request: #{{ number }}.

      {{ body | get_section("## Attributions", "") }}
